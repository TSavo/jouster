[
  {
    "title": "Jouster Documentation",
    "url": "/jouster/",
    "content": "Jouster is a powerful tool that helps you stick it to your failing tests by automatically creating GitHub issues for failing tests and closing them when tests pass."
  },
  {
    "title": "Test Runners",
    "url": "/jouster/test-runners.html",
    "content": "Jouster supports multiple test runners, allowing you to use your preferred testing framework while still benefiting from Jouster's issue tracking capabilities."
  },
  {
    "title": "Jest Test Runner",
    "url": "/jouster/test-runners/jest.html",
    "content": "Jest is a delightful JavaScript Testing Framework with a focus on simplicity. Jouster provides seamless integration with Jest, allowing you to track test failures and manage issues automatically."
  },
  {
    "title": "Mocha Test Runner",
    "url": "/jouster/test-runners/mocha.html",
    "content": "Mocha is a feature-rich JavaScript test framework running on Node.js and in the browser. Jouster provides seamless integration with Mocha, allowing you to track test failures and manage issues automatically."
  },
  {
    "title": "AVA Test Runner",
    "url": "/jouster/test-runners/ava.html",
    "content": "AVA is a test runner for Node.js with a concise API, detailed error output, and process isolation. Jouster provides seamless integration with AVA, allowing you to track test failures and manage issues automatically."
  },
  {
    "title": "Tape Test Runner",
    "url": "/jouster/test-runners/tape.html",
    "content": "Tape is a TAP-producing test harness for Node.js and browsers. Jouster provides seamless integration with Tape, allowing you to track test failures and manage issues automatically."
  },
  {
    "title": "Jasmine Test Runner",
    "url": "/jouster/test-runners/jasmine.html",
    "content": "Jasmine is a behavior-driven development framework for testing JavaScript code. Jouster provides seamless integration with Jasmine, allowing you to track test failures and manage issues automatically."
  },
  {
    "title": "Vitest Test Runner",
    "url": "/jouster/test-runners/vitest.html",
    "content": "Vitest is a Vite-native testing framework with a focus on speed and simplicity. Jouster provides seamless integration with Vitest, allowing you to track test failures and manage issues automatically."
  },
  {
    "title": "Cypress Test Runner",
    "url": "/jouster/test-runners/cypress.html",
    "content": "Cypress is a next-generation front-end testing tool built for the modern web. Jouster provides seamless integration with Cypress, allowing you to track test failures and manage issues automatically."
  },
  {
    "title": "Playwright Test Runner",
    "url": "/jouster/test-runners/playwright.html",
    "content": "Playwright is a framework for Web Testing and Automation. Jouster provides seamless integration with Playwright, allowing you to track test failures and manage issues automatically."
  },
  {
    "title": "TestCafe Test Runner",
    "url": "/jouster/test-runners/testcafe.html",
    "content": "TestCafe is a Node.js tool to automate end-to-end web testing. Jouster provides seamless integration with TestCafe, allowing you to track test failures and manage issues automatically."
  },
  {
    "title": "Karma Test Runner",
    "url": "/jouster/test-runners/karma.html",
    "content": "Karma is a test runner that runs tests in real browsers. Jouster provides seamless integration with Karma, allowing you to track test failures and manage issues automatically."
  },
  {
    "title": "Generic Test Runner",
    "url": "/jouster/test-runners/generic.html",
    "content": "The Generic test runner in Jouster allows you to run any command-line test tool that isn't directly supported. This provides flexibility to use your preferred testing framework while still benefiting from Jouster's issue tracking capabilities."
  },
  {
    "title": "Getting Started",
    "url": "/jouster/getting-started.html",
    "content": "This guide will help you get started with Jouster, including installation, configuration, and basic usage."
  },
  {
    "title": "Core Concepts",
    "url": "/jouster/core-concepts.html",
    "content": "Learn about the core concepts of Jouster, including how it works, test identification, issue lifecycle, and the mapping database."
  },
  {
    "title": "Advanced Features",
    "url": "/jouster/advanced-features.html",
    "content": "Explore advanced features of Jouster, including hooks, plugins, custom templates, and file-based bug tracking."
  }
]
